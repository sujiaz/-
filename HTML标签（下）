1.1表格的主要作用
  表格主要用于显示、展示数据，因为它可以让数据显示的非常的规整，可读性非常好。特别是后台展示数据的时候，能够熟练运用表格就显得很重要。一个清爽简约的表格能够把繁杂的数据表现得很有条理。
  注：表格不是用来布局页面的，而是用来展示数据的。

1.2表格的基本用法
<table>
    <tr>
        <td>单元格内的文字</td>
        ...
    </tr>
    ...
<table>
  1.<table></table>是用于定义表格的标签。
  2.<tr></tr>标签用于定义表格中的行，必须嵌套在<table></table>标签中。
  3.<td></td>用于定义表格中的单元格，必须嵌套在<tr></tr>标签中。
  4.字母td指表格数据，即数据单元格的内容。

1.3表头单元格标签
  一般表头单元格位于表格的第一行或第一列，表头单元格里面的文本内容加粗居中显示。
  <th>标签标示html表格的表头部分
<table>
    <tr>
        <th>姓名</th>
        ...
    <tr>
    ...
<table>

1.4表格属性
  表格标签这部分属性实际开发不常用，后面通过CSS来设置。
  属性名                属性值                        描述
  align                   left、center、right   规定表格相对周围元素的对齐方式
  border                1或“”                     规定表格单元是否拥有边框，默认为“”表示没有边框
  cellpadding        像素值                       规定单元边沿与其内容之间的空白，默认1像素
  cellspacing         像素值                       规定单元格之间的空白，默认2像素
  width                  像素值或百分比         规定表格的宽

1.5表格结构标签
  1.<thead></thead>:用于定义表格的头部。<thead>内部必须拥有<tr>标签。一般是位于第一行。
  2.<tbody></tbody>:用于定义表格的主体，主要用于放数据本体。
  3.以上两个标签都是包括在<table></table>中。

1.6合并单元格
合并单元格方式：
  跨行合并：rowspan=“合并单元格的个数”
  跨列合并：colspan=“合并单元格的个数”
目标单元格：（写合并代码）
  跨行：最上侧单元格为目标单元格，写合并代码。
  跨列：最左侧单元格为目标单元格，写合并代码。
合并单元格三部曲：
  1.先确定是跨行还是跨列合并。
  2.找到目标单元格，写上合并方式=合并的单元格数量。比如：<td colspan=“2”</td>.
  3.删除多余的单元格。
  
  列表是用来布局的，最大的特点是整齐、整洁、有序，它作为布局会更加自由和方便，根据使用情景不同，列表可以分为三大类：无序列表、有序列表和自定义列表。
2.1无序列表
  <ul>标签表示html页面中项目的无序列表，一般会以项目符号呈现列表项，而列表项使用<li>标签定义。
  无序列表的基本语法格式如下：
<ul>
    <li>列表项1</li>
    <li>列表项2</li>
    <li>列表项3</li>
    ...
</ul>
  1.无序列表的各个列表项之间没有顺序级别之分，是并列的。
  2.<ul></ul>中只能嵌套<li></li>,直接在<ul></ul>标签中输入其他标签或者文字的做法是不被允许的。
  3.<li></li>之间相当于一个容器，可以容纳所有元素。
  4.无序列表会带有自己的样式属性，但在实际使用时，我们会使用CSS来设置。

2.2有序列表
  有序列表即为有排列顺序的列表，其各个列表项会按照一定的顺序排列定义。
  在html标签中，<ol>标签用于定义有序列表，列表排序以数字来显示，并且使用<ol>标签来定义列表项。
有序列表的基本语法格式如下：
<ol>
    <li>列表项1</li>
    <li>列表项2</li>
    <li>列表项3</li>
    ...
</ol>
  1.<ol>/<ol>中只能嵌套<li></li>，直接在<ol></ol>标签中输入其他标签或者文字的做法是不被允许的。
  2.<li>与</li>之间相当于一个容器，可以容纳所有元素。
  3.有序列表会带有自己样式属性，但在实际使用时，我们会使用CSS来设置。

2.3自定义列表
  自定义列表的使用场景：
  自定义列表常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号。
  在html标签中，<dl>标签用于定义描述列表（或定义列表），该标签会与<dt>(定于项目/名字）和<dd>（描述每一个项目/名字）一起使用。
基本语法如下：
<dl>
    <dt>名词1</dt>
    <dd>名词1解释1</dd>
    <dd>名词1解释2</dd>
</dl>
  1.<dl></dl>里面只能包含<dt>和<dd>。
  2.<dt>和<dd>个数没有限制，经常是一个<dt>对应多个<dd>。
  
  3.1为什么需要表单
  使用表单是为了手机用户信息，在我们网页中，我们也需要跟用户进行交互，收集用户资料，此时就需要表单。
3.2表单的组成
  在html中，一个完整的表单通常由表单域、表单控件（也称为表单元素）和提示信息3个部分构成。
3.3表单域
  表单域是一个包含表单元素的区域。在html标签中，<form>标签用于定义表单域，以实现用户信息的收集和传递。
  <form>会把它范围内的表单元素信息提交给服务器。
<form action="url地址" method="提交方式" name="表单域名称”>
    各种表单元素控件
</form>
  属性        属性值        作用
  action     url地址       用于指定接收并处理表单数据的服务器程序的url地址。
  method  get/post    用于设置表单数据的提交方式，其取值为get或post。
  name      名称           用于指定表单的名称，以区分同一个页面中的多个表单域。
3.4表单控件（表单元素）
  在表单域中可以定义各种表单元素，这些表单元素就是允许用户在表单中输入或者选择的内容控件。
3.4.1<input>表单元素
  <input>标签用于收集用户信息，在<input>标签中，包含一个type属性值，输入字段拥有很多种形式（可以是文本子段、复选框、掩码后的文本控件、单选按钮、按钮等）。
<input type="属性值" />
  <input />标签为单标签
  type属性设置不同的属性值用来指定不同的控件类型。
type属性的属性值及其描述如下：
  属性值         描述
  button        定义可点击按钮（多数情况下，用于通过JavaScript启动脚本）
  checkbox    定义复选项
  file               定义输入字段和“浏览”按钮，供文件上传
  hidden        定义隐藏的输入字段
  image          定义图像形式的提交按钮
  password    定义密码字段，该字段中的字符被掩码
  radio           定义单选按钮
  reset           定义重置按钮，重置按钮会清除表单中的所有数据
  submit        定义提交按钮，提交按钮会把表单数据发送到服务器
  text             定义单行的输入字段，用户可在其中输入文本，默认宽度为20个字符
其他属性：
  属性             属性值               描述
  name           由用户自定义    定义input元素的名称
  value           由用户自定义     规定input元素的值
  checked      checked            规定次input元素首次加载时应当被选中
  maxlength  正整数               规定输入字段中的字符的最大长度
  性别：男<input type="radio" name="sex">女 <input type="radio" name="sex">未知<input type="radio ”name="sex">（name是表单元素名字，这里性别单选按钮必须有相同的名字name，才可以实现多选1）
  1.name和value是每个表单元素都有的属性值，主要给后台人员使用。
  2.name表单元素的名字，要求单选按钮和复选框要有相同的name值。
  3.checked属性主要针对于单选按钮和复选框，主要作用一打开页面，就要可以默认选中某个表单元素。
例<input type="radio" name="sex" value="男" checked="checked"/>男
   <input type="text" value="请输入用户名">

3.4.2<label>标签
  <label>标签为input元素定义标注（标签）
  <label>标签用于绑定一个表单元素，当点击<label>标签内的文本是，浏览器就会自动将焦点（光标）转到或者选择对应的表单元素上，用来增加用户体验.
语法：
<label for="sex">男</label>
<input type="radio" name="sex" id="sex" />
核心：<label>标签的for属性应当与相关元素的id属性相同。
例：<input type="radio" id="nan"><label for="nan">男</label>

3.4.3<select>表单元素
  在页面中，如果有多个选项让用户选择，并且想要节约页面空间时，我们可以使用<select>标签控件定义下拉列表。
语法：
<select>
    <option>选项1</option>
    <option>选项2</option>
    <option>选项3</option>
    ...
</select>
  1.<select>中至少包含一对<option>
  2.在<option>中定义selected=“selected”时，当前项即为默认选中项。

3.4.4<textarea>表单元素
语法：
<textarea>
    文本内容
</textarea>
  通过<textarea>标签可以轻松地创建多行文本输入框。
